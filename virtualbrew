#!/bin/bash

HERE=$(cd $(dirname "$0") ; pwd)
HOMEBREW_PREFIX=${HOMEBREW_PREFIX-/usr/local}

prefix=$1
[ -n "$prefix" ] || { echo "Usage: $0 <target dir>" >&2 ; exit 1; }

CLT=$( unset DEVELOPER_DIR ; xcode-select -p )
[ -d "$CLT" ] ||  { echo "Command Line Tools not installed; CLT or Xcode needed." >&2 ; exit 1; }

sdkver=$2
[ -n "$sdkver" ] || sdkver=$(/usr/bin/sw_vers -productVersion)

git="$CLT"/usr/bin/git
if ! "$git" --version 2>&1 >/dev/null ; then
	echo "Can not use Git; you may need to install CTL or Xcode first" >&2
	echo "and/or accept the usage license." >&2
	exit 1
fi

set -e

mkdir -p "$prefix"
cd "$prefix"

mkdir -p bin opt lib

if [ ! -d .git ] ; then
	# https://stackoverflow.com/questions/2411031
	"$git" init
	if [ -d "$HOMEBREW_PREFIX"/Homebrew/.git ] ; then
		"$git" remote add origin file://"$HOMEBREW_PREFIX"/Homebrew/.git
	else
		"$git" remote add origin https://github.com/Homebrew/homebrew.git
	fi
	"$git" fetch origin master --depth 1
	"$git" checkout -b master origin/master

else
	"$git" pull origin/master master
fi

if [ -d "$HOMEBREW_PREFIX"/Homebrew/Library/Taps/homebrew/homebrew-core/.git ] ; then
	mkdir -p Library/Taps/homebrew/homebrew-core/.git
	git_hc=( "$git" --git-dir=Library/Taps/homebrew/homebrew-core/.git
		          --work-tree=Library/Taps/homebrew/homebrew-core )
	"${git_hc[@]}" init
	if [ -d ] ; then
		"${git_hc[@]}" remote add origin file://"$HOMEBREW_PREFIX"/Homebrew/Library/Taps/homebrew/homebrew-core/.git
	else
		"${git_hc[@]}" remote add origin https://github.com/Homebrew/homebrew-core
	fi
	"${git_hc[@]}" fetch origin master --depth 1
	"${git_hc[@]}" checkout -b master origin/master
	# "${git_hc[@]}" branch --set-upstream-to origin
else
	bin/brew update
fi

mkdir -p Library/Developer/CommandLineTools{,/usr,/usr/bin}
mkdir -p Library/VirtualBrew/shims

[ -x bin/brew.orig ] || "$git" mv bin/brew bin/brew.orig
cat >bin/brew.wrapper <<EOF
#!/bin/bash -e
prefix=\$(cd "\$(dirname "\$0")" ; pwd)
export HOMEBREW_NO_ANALYTICS_THIS_RUN=1
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_NO_ENV_FILTERING=1
export HOMEBREW_BUILD_FROM_SOURCE=1
export PATH="\$prefix/Library/VirtualBrew/shims:\$PATH"
[ -n "\$MACOSX_DEPLOYMENT_TARGET" ] || export MACOSX_DEPLOYMENT_TARGET=\$(sw_vers -productVersion)
unset SDKROOT DEVELOPER_DIR
exec \${0%*.wrapper}.orig "\$@"
EOF
chmod +x bin/brew.wrapper
ln -shf brew.wrapper bin/brew

cat >Library/VirtualBrew/shims/sw_vers <<'EOF'
#!/bin/bash
while [ ! -d "${HOMEBREW_PREFIX:-$0}" ] ; do HOMEBREW_PREFIX="$(dirname "$0")" ; done
cd "$HOMEBREW_PREFIX/../../.."    # Library/VirtualBrew/shims
HOMEBREW_PREFIX=$(pwd)
[ ! -r "$HOMEBREW_PREFIX/environment" ] || . "$HOMEBREW_PREFIX/environment" 2>&1 >/dev/null
if [ -z "$MACOSX_DEPLOYMENT_TARGET" ] ; then
	SDKROOT=${SDKROOT:=$HOMEBREW_PREFIX/Library/VirtualBrew/MacOSX.sdk}
	SDKROOT=$(/usr/bin/readlink "$SDKROOT")
	if [ -d "$SDKROOT" ] ; then
		MACOSX_DEPLOYMENT_TARGET=${SDKROOT##*/MacOSX}
		MACOSX_DEPLOYMENT_TARGET=${MACOSX_DEPLOYMENT_TARGET%%.sdk}
	fi
fi
if [ x$1 == x-productVersion ] ; then
	echo "$MACOSX_DEPLOYMENT_TARGET"
	exit
elif [ -n "$1" ] ; then
	/usr/bin/sw_vers "$@"
	exit
fi
/usr/bin/sw_vers | while read KEY VAL ; do
	case $KEY in
		"ProductVersion:") /bin/echo "ProductVersion:"$'\t'"$MACOSX_DEPLOYMENT_TARGET" ;;
		*) /bin/echo "$KEY"$'\t'"$VAL" ;;
	esac
done
EOF
chmod +x Library/VirtualBrew/shims/sw_vers

install -m 755 "$HERE"/sh Library/VirtualBrew/shims/sh

/usr/bin/patch -p1 < $HERE/patch-homebrew-allow-DEVELOPER_DIR.patch

_DEVDIR=$(xcode-select -p)
# _DEVDIR=${_DEVDIR-}
cat >environment <<EOF

DEVELOPER_DIR="$_DEVDIR"

MACOSX_DEPLOYMENT_TARGET="$sdkver"

# BOOST_LIBS=filesystem,program_options,system,thread

# ARCH="-arch x86_64 -arch i386"
ARCH="-arch x86_64"

CFLAGS="\$CFLAGS \$ARCH"
CXXFLAGS="\$CXXFLAGS \$ARCH"
LDFLAGS="\$LDFLAGS \$ARCH"

EOF

sdkminver=$(defaults read /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Info.plist  MinimumSDKVersion)
m=( $(echo "${sdkminver}.0.0.0" | tr . ' ' ) )
v=( $(echo "${sdkver}.1.1.1" | tr . ' ' ) )

if [ "${m[0]}" -gt "${v[0]}" -o \(  \
	 "${m[0]}" -eq "${v[0]}" -a \( "${m[1]}" -gt "${v[1]}" -o \( \
	 	                           "${m[1]}" -eq "${v[1]}" -a \( "${m[2]}" -gt "${v[2]}" \) \
    \) \) \) ] ; then
	echo
	echo "== ATTENTION ========================================================================"
	echo "Note: MinimumSDKVersion ($sdkminver) in XCode is higher than required SDK ($sdkver)."
	echo "Edit /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Info.plist"
	echo "====================================================================================="
fi

# We call this to verify the environment
exec "$prefix/Library/VirtualBrew/shims/sh" /usr/bin/true

